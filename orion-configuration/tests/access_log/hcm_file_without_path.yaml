staticResources:
    listeners:
        - name: listener-1
          listener_filters:
              ##### Envoy needs it to pass SNI to select different filterchains
              - name: listener_https_1_tls_inspector
                typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
                    enable_ja3_fingerprinting: false
          address:
              socketAddress:
                  address: 127.0.0.1
                  portValue: 8000
          filterChains:
              - name: filter_chain_http
                filter_chain_match:
                    destination_port: 8000
                filters:
                    - name: http_con_man
                      typedConfig:
                          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                          codec_type: AUTO
                          statPrefix: ingress_http
                          httpFilters:
                              - name: envoy.filters.http.router
                                typedConfig:
                                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                                    start_child_span: false
                          access_log:
                              - name: envoy.access_loggers.file
                                typed_config:
                                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                                    log_format:
                                        text_format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n"
                          routeConfig:
                              name: local_route
                              virtualHosts:
                                  - name: local_service
                                    domains: ["*"] # for some reason hyper returns host 127.0.0.1 for https and host none for http
                                    request_headers_to_add:
                                        - header:
                                              key: "my-custom-header"
                                              value: "value"
                                    routes:
                                        - match:
                                              prefix: "/dr"
                                          direct_response:
                                              status: "200"
                                              body:
                                                  inline_string: "This is a direct response"
                                        - match:
                                              prefix: "/"
                                          route:
                                              cluster: cluster1

    clusters:
        - name: cluster1
          type: STATIC
          lbPolicy: ROUND_ROBIN
          loadAssignment:
              clusterName: cluster1
              endpoints:
                  - lbEndpoints:
                        - endpoint:
                              address:
                                  socketAddress:
                                      address: "127.0.0.1"
                                      portValue: 5454
