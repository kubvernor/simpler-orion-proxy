[workspace]
members = [
  "envoy-data-plane-api",
  "orion-configuration",
  "orion-data-plane-api",
  "orion-error",
  "orion-format",
  "orion-http-header",
  "orion-interner",
  "orion-lib",
  "orion-metrics",
  "orion-proxy",
  "orion-xds",
]


resolver = "2"


[workspace.package]
description  = "Orion Proxy is a highly experimental cloud native proxy. Orion Proxy is configurable via Envoy xDS protocol"
edition      = "2021"
license-file = "./LICENSE"
rust-version = "1.84"
version      = "0.1.0"


exclude = ["orion-client"]


[workspace.dependencies]
envoy-data-plane-api = { path = "envoy-data-plane-api" }
orion-configuration  = { path = "orion-configuration" }
orion-data-plane-api = { path = "orion-data-plane-api" }
orion-error          = { path = "orion-error" }
orion-format         = { path = "orion-format" }
orion-http-header    = { path = "orion-http-header" }
orion-interner       = { path = "orion-interner" }
orion-lib            = { path = "orion-lib" }
orion-metrics        = { path = "orion-metrics" }
orion-xds            = { path = "orion-xds" }

abort-on-drop       = "0.2"
bytes               = "1"
compact_str         = { version = "0.8.0", features = ["serde"] }
exponential-backoff = "1.2.0"
futures             = "0.3"
http                = "1.0"
http-body           = "1.0"
http-body-util      = "0.1.0"
hyper-util          = { version = "0.1.15" }
num_cpus            = "1"
ppp                 = "2.3"
prost               = "0.13"
prost-build         = "^0.13"
prost-reflect       = { version = "0.14", features = ["derive", "serde"] }
regex               = "1.10.2"
serde               = { version = "1", features = ["derive", "rc"] }
serde_json          = { version = "1" }
serde_yaml          = "0.9.34"
thiserror           = "1.0.57"
tokio               = { version = "1.37", features = ["full"] }
tokio-stream        = { version = "0.1.15", features = ["net", "sync"] }
tonic               = "^0.12"
tonic-build         = "^0.12"
tonic-health        = "^0.12"
tower               = { version = "0.5.1", features = ["make"] }
tracing             = "0.1"
tracing-subscriber  = "0.3"
tracing-test        = { version = "0.2", features = ["no-env-filter"] }
url                 = "2"


[patch.crates-io]
hyper-util = { path = "orion-client" }

[profile.release]
codegen-units    = 1
debug            = false
debug-assertions = false
incremental      = false
lto              = true
opt-level        = 3
overflow-checks  = false
panic            = 'unwind'
rpath            = false
strip            = "debuginfo"

[profile.release-debuginfo]
debug           = "full"
inherits        = "release"
split-debuginfo = "packed"
strip           = false

[profile.release-dhat]
debug    = 1
inherits = "release"

[profile.bench]
inherits = "release"

[workspace.lints.clippy]
correctness                    = { level = "deny", priority = 10 }
disallowed-methods             = "deny"
expect_used                    = "warn"                            # FIXME this should be deny
panic                          = "warn"                            # FIXME this should be deny
todo                           = "deny"
transmute_ptr_to_ptr           = "deny"
unchecked_duration_subtraction = "deny"
unused_async                   = "deny"
unwrap_used                    = "deny"

# A subset of pedantic as warn
cast_lossless                      = "warn"
cast_possible_truncation           = "warn"
cast_possible_wrap                 = "warn"
cast_precision_loss                = "warn"
cast_ptr_alignment                 = "warn"
cast_sign_loss                     = "warn"
checked_conversions                = "warn"
if_then_some_else_none             = "warn"
inconsistent_struct_constructor    = "allow"
invalid_upcast_comparisons         = "warn"
large_futures                      = "warn"
large_stack_arrays                 = "warn"
large_types_passed_by_value        = "warn"
map_unwrap_or                      = "allow"
maybe_infinite_iter                = "warn"
missing_errors_doc                 = "allow"
missing_panics_doc                 = "allow"
module_name_repetitions            = "allow"
must_use_candidate                 = "allow"
needless_raw_string_hashes         = "allow"
pedantic                           = { level = "warn", priority = -1 }
print_stderr                       = "warn"
print_stdout                       = "warn"
ptr_cast_constness                 = "warn"
range_minus_one                    = "warn"
range_plus_one                     = "warn"
redundant_closure_for_method_calls = "warn"
return_self_not_must_use           = "warn"
same_functions_in_if_condition     = "warn"
semicolon-if-nothing-returned      = "allow"
similar_names                      = "warn"
str_to_string                      = "warn"
string_to_string                   = "warn"
unicode_not_nfc                    = "warn"
